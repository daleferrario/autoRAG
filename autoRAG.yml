---
AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation Template for AutoRAG. Deploys VPC and networking resources and an EC2 webserver."
Parameters:
  LatestAmiId:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id"
    Description: "The Ubuntu 22.04 LTS Stable AMI ID from SSM Parameter Store"
  KeyPair:
    Description: Name of the keypair to use for SSH access
    Type: String
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.small
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock: 10.0.0.0/16
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      NetworkAclId:
        Fn::GetAtt:
          - VPC
          - DefaultNetworkAcl
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP ingress
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: 0.0.0.0/0
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      ImageId:
        Ref: LatestAmiId
      NetworkInterfaces:
        - GroupSet:
            - Ref: WebServerSecurityGroup
          AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          DeleteOnTermination: "true"
          SubnetId:
            Ref: PublicSubnet
      KeyName:
        Ref: KeyPair
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo apt update -y
          sudo apt install apache2 -y
          sudo systemctl start apache2
          echo "<html><body><h1>Awesome !!!</h1></body></html>" > /var/www/html/index.html
          sudo apt install curl
          curl -fsSL https://ollama.com/install.sh | sh
          service ollama start
          while [ "$(ollama list | grep 'NAME')" == "" ]; do
            sleep 1
          done
          ollama pull tinydolphin
          nohup ollama run tinydolphin &

Outputs:
  URL:
    Description: URL of the sample website
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - WebServerInstance
              - PublicDnsName
